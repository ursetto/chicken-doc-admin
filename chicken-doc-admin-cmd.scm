#!/usr/bin/env csi4 -script

(require-library chicken-doc-admin)
(import chicken-doc-admin)
(require-library chicken-doc)
(import (only chicken-doc repository-base verify-repository))
(use ports)

(define (usage)
  (with-output-to-port (current-error-port)
    (lambda ()
      (print "usage: " (program-name) " COMMAND")
      (print "  -l             list repository information")
      (print "  -i             initialize repository non-destructively")
      (print "  -e dir         process svnwiki egg directory DIR")
      (print "  -m dir         process svnwiki manual directory DIR")
      (print "  -E file [path] process egg file FILE [storing at PATH]")
      (print "  -M file        process svnwiki man file FILE")
      (print "  -r             regenerate indices (required after -E or -M)")
      (print "  -d path        delete node path recursively (EMPTY PATH DELETES ENTIRE REPO)")
      (exit 1))))

(when (null? (command-line-arguments))
  (usage))

(let ((o (car (command-line-arguments)))
      (r (cdr (command-line-arguments))))
  (cond ((string=? o "-i")
         (create-repository!))
        (else
         (unless (verify-repository)
           (fprintf (current-error-port)
                    "No repository found at ~a\nUse -i to initialize\n" (repository-base))
           (exit 1))
         (cond ((string=? o "-r")
                (print "Rebuilding ID cache...")
                (refresh-id-cache))
               ((string=? o "-l")
                (describe-repository))
               ((string=? o "-d")
                (delete-key (map string->symbol r)))
               ((string=? o "-e")
                (unless (pair? r) (usage))
                (parse-egg-directory (car r) 'svnwiki))
               ((string=? o "-m")
                (unless (pair? r) (usage))
                (parse-man-directory (car r) 'svnwiki))
               ((string=? o "-E")
                (unless (pair? r) (usage))
                (unless (parse-individual-egg (car r) 'svnwiki
                                              (and (pair? (cdr r)) (cdr r))) ; path override
                  (error "Unable to parse egg file" (car r))))
               ((string=? o "-M")
                (unless (pair? r) (usage))
                (unless (parse-individual-man (car r) 'svnwiki)
                  (error "Unable to parse man file" (car r))))
               (else
                (usage))))))
